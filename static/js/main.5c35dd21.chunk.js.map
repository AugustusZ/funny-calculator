{"version":3,"sources":["components/Digit/constants.ts","components/Digit/utils.ts","utils/dev.ts","components/Digit/index.tsx","utils/expression.ts","components/Display/index.tsx","components/FooterButton/index.tsx","components/Help/index.tsx","components/Calculator/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MAPPING_CHAR_TO_CODE","I","P","MAPPING_CODE_TO_CHAR","SVG_ELEMENTS","tag","d","cx","cy","r","getDigitFromCode","code","isDev","decodeURI","window","location","search","includes","Digit","digit","setDigit","useState","char","c","length","charAt","utils","setCode","getStatusAt","index","onClick","event","strokeIndex","parseInt","target","dataset","newStatus","newCode","split","map","i","join","newDigit","isValid","className","xmlns","viewBox","fillRule","elem","attrs","status","props","key","String","checkExpression","expression","value","evaluate","parseFloat","format","getInitDigits","isNaN","concat","Array","fill","Display","setExpression","digits","setDigits","ref","useRef","useEffect","current","scrollLeft","newDigits","setDigitAt","FooterButton","isDangerous","onDoubleClick","children","Help","Calculator","NaN","answer","setAnswer","setKey","isShowingHelp","setIsShowingHelp","answerRef","console","log","newAnswer","error","calculate","Date","now","role","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c35dd21.chunk.js","sourcesContent":["/**\n * ```txt\n * ---0--- --1----\n * |  \\   |   /  |\n * 2   3  4  5   6\n * |    \\ | /    |\n * ---7--- ---8---\n * |    / | \\    |\n * 9  10  11 12 13\n * | /    |   \\  |\n * ---14-- --15---  16\n * ```\n */\n\nexport const MAPPING_CHAR_TO_CODE: Record<string, string> = {\n  '0': '11100010010001110',\n  '1': '00000010000001000',\n  '2': '11000011110000110',\n  '3': '11000011100001110',\n  '4': '00100011100001000',\n  '5': '11100001100001110',\n  '6': '11100001110001110',\n  '7': '11000010000001000',\n  '8': '11100011110001110',\n  '9': '11100011100001110',\n  '.': '00000000000000001',\n  '+': '00001001100100000',\n  '-': '00000001100000000',\n  '*': '00010100001010000',\n  '/': '00000100001000000',\n  '(': '00000100000010000',\n  ')': '00010000001000000',\n\n  I: '11001000000100110',\n  P: '11100011110000000',\n\n  '': '00000000000000000'\n};\n\nexport const MAPPING_CODE_TO_CHAR: Record<string, string> = {\n  '11100010010001110': '0',\n\n  '00000010000001000': '1', // right 1\n  '00001000000100000': '1', // middle 1\n  '00100000010000000': '1', // left 1\n\n  '11000011110000110': '2',\n  '11000100001000110': '2', // Z\n\n  '11000011100001110': '3', // ∃\n  '11000100100001110': '3', // ㇋\n  '11000100000010110': '3', // flipped ∑\n\n  '00100011100001000': '4',\n  '00001011100001000': '4', // 上⤴︎\n  '00001010100001000': '4', // right 丩\n  '00101001000100000': '4', // left 丩\n  '00000110100001000': '4', // right 4 with ⊿\n  '00101001100100000': '4', // 4 like /+\n\n  '11100001100001110': '5',\n  '11100001110001110': '6',\n\n  '11000010000001000': '7',\n  '11000100001000000': '7', // ⧶\n  '11000101101000000': '7', // handwriting 7 with bar ヌ\n  '11100010000001000': '7', // 7 with serif at the beginning\n\n  '11100011110001110': '8',\n  '11010100001010110': '8', // ⧖\n\n  '11100011100001110': '9',\n  '11100011100001000': '9', // 9 without tail\n  '00000000000000001': '.',\n  '00001001100100000': '+',\n  '00000001100000000': '-',\n  '00010100001010000': '*', // X\n  '00001001101010000': '*', // asterisk (5 petals)\n  '00010101101010000': '*', // ⦒⦑\n  '00000100001000000': '/',\n  '00000100000010000': '(',\n  '00010000001000000': ')',\n\n  // '00000110101001000': 'A', // Avengers' A\n  // '11100011110001000': 'A', // fat\n  // '11000011110001110': 'a', // flipped 6\n  '11001000000100110': 'I',\n  '11100011110000000': 'P',\n\n  '00000000000000000': ''\n};\n\nexport const SVG_ELEMENTS = [\n  { tag: 'path', d: 'M138.74 0v11.602L123.255 27h-79.64L30.909 13.5 44.56 0z' },\n  {\n    tag: 'path',\n    d: 'M145.908 0v11.602L161.393 27h79.64l12.707-13.5L240.088 0z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M26.11 18l12.54 13.184-5.688 162.59L19.497 207 6.962 193.774l5.687-162.59z'\n  },\n  {\n    tag: 'path',\n    d: 'M61.047 33l56.568 113.507L116.024 192h-7.08L44.572 61.987 45.586 33z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M142.11 18l12.54 13.184-5.688 162.59L135.497 207l-12.535-13.226 5.687-162.59z'\n  },\n  {\n    tag: 'path',\n    d: 'M237.586 33l-1.014 28.987L163.103 192h-7.08l1.592-45.493L222.125 33z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M258.11 18l12.54 13.184-5.688 162.59L251.497 207l-12.535-13.226 5.687-162.59z'\n  },\n  {\n    tag: 'path',\n    d: 'M117.633 198l12.708 13.5L116.69 225h-79.64l-12.708-13.5L37.994 198z'\n  },\n  {\n    tag: 'path',\n    d: 'M233.633 198l12.708 13.5L232.69 225h-79.64l-12.708-13.5 13.653-13.5z'\n  },\n  {\n    tag: 'path',\n    d: 'M19.148 217l12.54 13.184L26 392.774 12.536 406 0 392.774l5.688-162.59z'\n  },\n  {\n    tag: 'path',\n    d: 'M33.062 391l1.014-28.987L107.545 232h7.08l-1.592 45.493L48.523 391z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M135.148 217l12.54 13.184L142 392.774 128.536 406 116 392.774l5.688-162.59z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M161.704 232l64.372 130.013L225.062 391h-15.461l-56.568-113.507L154.624 232z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M251.148 217l12.54 13.184L258 392.774 244.536 406 232 392.774l5.688-162.59z'\n  },\n  {\n    tag: 'path',\n    d: 'M125.74 423v-11.602L110.255 396h-79.64l-12.707 13.5L31.56 423z'\n  },\n  {\n    tag: 'path',\n    d: 'M132.908 423v-11.602L148.393 396h79.64l12.707 13.5-13.652 13.5z'\n  },\n  {\n    tag: 'circle',\n    cx: 266.908,\n    cy: 415,\n    r: 16\n  }\n];\n","import { MAPPING_CHAR_TO_CODE, MAPPING_CODE_TO_CHAR } from './constants';\n\nexport const getCodeFromDigit = (char: string) => {\n  const c = char.length > 1 ? char.charAt(0) : char;\n  return MAPPING_CHAR_TO_CODE[c];\n};\n\nexport const getDigitFromCode = (code: string) => {\n  return MAPPING_CODE_TO_CHAR[code];\n};\n","export const isDev = decodeURI(window.location.search).includes('dev=✔︎');\n","import React, { useState } from 'react';\nimport './index.css';\nimport * as utils from './utils';\nimport { SVG_ELEMENTS } from './constants';\nimport { isDev } from '../../utils/dev';\n\nconst Digit = ({\n  digit,\n  setDigit\n}: {\n  digit: string;\n  setDigit: (value: string) => void;\n}) => {\n  const [code, setCode] = useState<string>(utils.getCodeFromDigit(digit || ''));\n\n  const getStatusAt = (index: number) => code.charAt(index) === '1';\n\n  const onClick = (event: any) => {\n    const strokeIndex: number = parseInt(event.target.dataset['stroke'], 10);\n    const newStatus = !getStatusAt(strokeIndex);\n    const newCode = code\n      .split('')\n      .map((c, i) => (strokeIndex === i ? (newStatus ? '1' : '0') : c))\n      .join('');\n    setCode(newCode);\n\n    const newDigit = utils.getDigitFromCode(newCode);\n    if (typeof newDigit === 'string') {\n      setDigit(newDigit);\n    }\n  };\n\n  const isValid = typeof utils.getDigitFromCode(code) === 'string';\n  return (\n    <div className={'digit' + (isValid ? '' : ' invalid')}>\n      {isDev && <code className=\"code\">{code}</code>}\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 283 431\">\n        <g fillRule=\"evenodd\">\n          {SVG_ELEMENTS.map((elem, index) => {\n            const { tag, ...attrs } = elem;\n            const status = getStatusAt(index);\n            const props = {\n              ...attrs,\n              onClick,\n              key: String(status) + index,\n              className: status ? 'on' : '',\n              'data-stroke': index\n            };\n            return tag === 'path' ? (\n              <path {...props} />\n            ) : tag === 'circle' ? (\n              <circle {...props} />\n            ) : null;\n          })}\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default Digit;\n","import { evaluate, format } from 'mathjs';\nexport const checkExpression = (expression: string): number | undefined => {\n  try {\n    const value = evaluate(expression);\n    return parseFloat(format(value, 14));\n  } catch {\n    return undefined;\n  }\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport Digit from '../Digit';\n\nimport './index.css';\nimport { checkExpression } from '../../utils/expression';\n\nconst getInitDigits = (value: number) =>\n  String(isNaN(value) ? '' : value)\n    .split('')\n    .concat(Array(100).fill(''));\nconst Display = ({\n  value,\n  setExpression\n}: {\n  value: number;\n  setExpression: (expression: string) => void;\n}) => {\n  const [digits, setDigits] = useState<string[]>(getInitDigits(value));\n  const ref = useRef<HTMLDivElement>(null);\n\n  const setDigitAt = (newDigit: string, index: number) => {\n    const newDigits = digits.map((d, i) => (index === i ? newDigit : d));\n    setDigits(newDigits);\n\n    //\n    const expression = newDigits.join('');\n    if (typeof checkExpression(expression) !== 'undefined') {\n      setExpression(expression);\n    }\n  };\n\n  useEffect(() => {\n    setDigits(getInitDigits(value));\n\n    if (ref.current) {\n      ref.current.scrollLeft = 0;\n    }\n  }, [value]);\n\n  return (\n    <div className=\"display\" ref={ref}>\n      {digits.map((digit, index) => {\n        const setDigit = (value: string) => {\n          setDigitAt(value, index);\n        };\n        return (\n          <Digit key={digit + '@' + index} digit={digit} setDigit={setDigit} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Display;\n","import React, { ReactNode } from 'react';\n\nimport './index.css';\n\nconst FooterButton = ({\n  isDangerous,\n  onClick,\n  onDoubleClick,\n  children\n}: {\n  isDangerous?: boolean;\n  onClick: () => void;\n  onDoubleClick?: () => void;\n  children: ReactNode;\n}) => {\n  return (\n    <button\n      className={'footer-button' + (isDangerous ? ' dangerous' : '')}\n      onClick={onClick}\n      onDoubleClick={onDoubleClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default FooterButton;\n","import React from 'react';\n\nimport './index.css';\n\nconst Help = () => {\n  return (\n    <div className=\"help\">\n      A calculator w/o a numpad is like <br />a telephone w/o a dial.\n    </div>\n  );\n};\n\nexport default Help;\n","import React, { useState, useRef } from 'react';\nimport Display from '../Display';\nimport FooterButton from '../FooterButton';\nimport Help from '../Help';\n\nimport './index.css';\nimport { checkExpression } from '../../utils/expression';\n\nconst initValue = NaN;\nconst Calculator: React.FC = () => {\n  const [answer, setAnswer] = useState(initValue);\n  const [key, setKey] = useState(0);\n  const [isShowingHelp, setIsShowingHelp] = useState(false);\n  const answerRef = useRef(initValue);\n\n  const setExpression = (expression?: string) => {\n    if (typeof expression === 'undefined') {\n      answerRef.current = initValue;\n      console.log('Reset');\n      return;\n    }\n\n    const newAnswer = checkExpression(expression);\n    if (typeof newAnswer === 'number') {\n      answerRef.current = newAnswer; // don't set state yet\n      console.log('Answer:', newAnswer);\n    } else {\n      console.error('Invalid expression:', expression);\n    }\n  };\n\n  const calculate = () => {\n    setAnswer(answerRef.current);\n  };\n\n  const reset = () => {\n    setExpression();\n    calculate();\n    setKey(Date.now());\n  };\n\n  const showHelp = () => {\n    setIsShowingHelp(true);\n  };\n\n  const hideHelp = () => {\n    setIsShowingHelp(false);\n  };\n\n  return (\n    <div className=\"calculator\">\n      <Display key={key} setExpression={setExpression} value={answer} />\n      <footer>\n        <FooterButton\n          onClick={reset}\n          isDangerous={true}\n          onDoubleClick={showHelp}>\n          {'↺'}\n        </FooterButton>\n        <FooterButton onClick={calculate}>{'＝'}</FooterButton>\n      </footer>\n      {isShowingHelp && (\n        <div className=\"full-screen\" role=\"button\" onDoubleClick={hideHelp}>\n          <Help />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport Calculator from './components/Calculator';\nimport './App.css';\n\nconst App: React.FC = () => (\n  <div className=\"app\">\n    <div className=\"container\">\n      <Calculator />\n    </div>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}