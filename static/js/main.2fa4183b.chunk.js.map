{"version":3,"sources":["components/Digit/utils.ts","components/Digit/index.tsx","utils/expression.ts","components/Display/index.tsx","components/FooterButton/index.tsx","components/Calculator/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MAPPING_CHAR_TO_CODE","MAPPING_CODE_TO_CHAR","getDigitFromCode","code","SVG_ELEMENTS","tag","d","cx","cy","r","Digit","digit","setDigit","useState","char","c","length","charAt","utils","setCode","getStatusAt","index","onClick","event","strokeIndex","parseInt","target","dataset","newStatus","newCode","split","map","i","join","newDigit","isValid","className","xmlns","viewBox","fillRule","elem","attrs","status","props","key","String","checkExpression","expression","Function","getInitDigits","value","isNaN","concat","Array","fill","Display","setExpression","digits","setDigits","ref","useRef","useEffect","current","scrollLeft","newDigits","setDigitAt","FooterButton","isDangerous","children","Calculator","NaN","answer","setAnswer","setKey","answerRef","console","log","newAnswer","error","calculate","Date","now","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2fa4183b.chunk.js","sourcesContent":["/**\n * 0\n * 1 2 3 4 5\n * 6 7\n * 8 9 10 11 12\n * 13\n * 14\n */\n\nconst MAPPING_CHAR_TO_CODE: Record<string, string> = {\n  '': '000000000000000',\n  '0': '110001001000110',\n  '1': '000001000000100',\n  '2': '100001111000010',\n  '3': '100001110000110',\n  '4': '010001110000100',\n  '5': '110000110000110',\n  '6': '110000111000110',\n  '7': '100001000000100',\n  '8': '110001111000110',\n  '9': '110001110000110',\n  '.': '000000000000001',\n  '+': '000100110010000',\n  '-': '000000110000000',\n  '*': '001010000101000', // 'x'; '*': '001110000111000' / '001010110101000' / '001110110111000'\n  '/': '000010000100000',\n  '(': '000010000001000',\n  ')': '001000000100000'\n};\n\nconst MAPPING_CODE_TO_CHAR: Record<string, string> = {\n  '000000000000000': '',\n  '110001001000110': '0',\n  '000001000000100': '1',\n  '100001111000010': '2',\n  '100001110000110': '3',\n  '010001110000100': '4',\n  '110000110000110': '5',\n  '110000111000110': '6',\n  '100001000000100': '7',\n  '110001111000110': '8',\n  '110001110000110': '9',\n  '000000000000001': '.',\n  '000100110010000': '+',\n  '000000110000000': '-',\n  '001010000101000': '*', // 'x'; '*': '001110000111000' / '001010110101000' / '001110110111000'\n  '000010000100000': '/',\n  '000010000001000': '(',\n  '001000000100000': ')'\n};\n\nexport const getCodeFromDigit = (char: string) => {\n  const c = char.length > 1 ? char.charAt(0) : char;\n  return MAPPING_CHAR_TO_CODE[c];\n};\n\nexport const getDigitFromCode = (code: string) => {\n  return MAPPING_CODE_TO_CHAR[code];\n};\n\nexport const SVG_ELEMENTS = [\n  {\n    tag: 'path',\n    d:\n      'M242.479 0l12.805 13.045L241.575 26h-80.117l-13.834-14h-8.609l-14.811 14H44.086L31.284 13.045 45.002 0z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M26.109 18l12.54 13.184-5.687 162.589L19.497 207 6.962 193.774l5.687-162.59z'\n  },\n  {\n    tag: 'path',\n    d: 'M61.047 33l56.568 113.507L116.024 192h-7.08L44.572 61.987 45.586 33z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M142.109 18l12.54 13.184-5.687 162.589L135.497 207l-12.535-13.226 5.687-162.59z'\n  },\n  {\n    tag: 'path',\n    d: 'M237.586 33l-1.014 28.987L163.103 192h-7.079l1.591-45.493L222.124 33z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M258.109 18l12.54 13.184-5.687 162.589L251.497 207l-12.535-13.226 5.687-162.59z'\n  },\n  {\n    tag: 'path',\n    d: 'M117.633 198l12.708 13.5-13.652 13.5H37.05l-12.709-13.5L37.994 198z'\n  },\n  {\n    tag: 'path',\n    d: 'M233.633 198l12.708 13.5-13.652 13.5H153.05l-12.709-13.5 13.653-13.5z'\n  },\n  {\n    tag: 'path',\n    d: 'M19.148 217l12.54 13.184L26 392.773 12.536 406 0 392.774l5.688-162.59z'\n  },\n  {\n    tag: 'path',\n    d: 'M33.062 391l1.014-28.987L107.544 232h7.08l-1.592 45.493L48.523 391z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M135.148 217l12.54 13.184L142 392.773 128.536 406 116 392.774l5.688-162.59z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M161.704 232l64.372 130.013L225.062 391h-15.461l-56.568-113.507L154.624 232z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M251.148 217l12.54 13.184L258 392.773 244.536 406 232 392.774l5.688-162.59z'\n  },\n  {\n    tag: 'path',\n    d:\n      'M111.225 397l12.352 12.999h11.641L148.479 397h80.118l12.785 13.454L227.646 424H30.169l-12.787-13.546L31.108 397z'\n  },\n  {\n    tag: 'circle',\n    cx: 266.908,\n    cy: 415,\n    r: 16\n  }\n];\n","import React, { useState } from 'react';\nimport './index.css';\nimport * as utils from './utils';\n\nconst Digit = ({\n  digit,\n  setDigit\n}: {\n  digit: string;\n  setDigit: (value: string) => void;\n}) => {\n  const [code, setCode] = useState<string>(utils.getCodeFromDigit(digit || ''));\n\n  const getStatusAt = (index: number) => code.charAt(index) === '1';\n\n  const onClick = (event: any) => {\n    const strokeIndex: number = parseInt(event.target.dataset['stroke'], 10);\n    const newStatus = !getStatusAt(strokeIndex);\n    const newCode = code\n      .split('')\n      .map((c, i) => (strokeIndex === i ? (newStatus ? '1' : '0') : c))\n      .join('');\n    setCode(newCode);\n\n    const newDigit = utils.getDigitFromCode(newCode);\n    if (typeof newDigit === 'string') {\n      setDigit(newDigit);\n    }\n  };\n\n  const isValid = typeof utils.getDigitFromCode(code) === 'string';\n  return (\n    <div className={'digit' + (isValid ? '' : ' invalid')}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 283 431\">\n        <g fillRule=\"evenodd\">\n          {utils.SVG_ELEMENTS.map((elem, index) => {\n            const { tag, ...attrs } = elem;\n            const status = getStatusAt(index);\n            const props = {\n              ...attrs,\n              onClick,\n              key: String(status) + index,\n              className: status ? 'on' : '',\n              'data-stroke': index\n            };\n            return tag === 'path' ? (\n              <path {...props} />\n            ) : tag === 'circle' ? (\n              <circle {...props} />\n            ) : null;\n          })}\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default Digit;\n","export const checkExpression = (expression: string): number | undefined => {\n  try {\n    // eslint-disable-next-line\n    return Function(`\"use strict\";return (${expression})`)();\n  } catch {\n    return undefined;\n  }\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport Digit from '../Digit';\n\nimport './index.css';\nimport { checkExpression } from '../../utils/expression';\n\nconst getInitDigits = (value: number) =>\n  String(isNaN(value) ? '' : value)\n    .split('')\n    .concat(Array(100).fill(''));\nconst Display = ({\n  value,\n  setExpression\n}: {\n  value: number;\n  setExpression: (expression: string) => void;\n}) => {\n  const [digits, setDigits] = useState<string[]>(getInitDigits(value));\n  const ref = useRef<HTMLDivElement>(null);\n\n  const setDigitAt = (newDigit: string, index: number) => {\n    const newDigits = digits.map((d, i) => (index === i ? newDigit : d));\n    setDigits(newDigits);\n\n    //\n    const expression = newDigits.join('');\n    if (typeof checkExpression(expression) !== 'undefined') {\n      setExpression(expression);\n    }\n  };\n\n  useEffect(() => {\n    setDigits(getInitDigits(value));\n\n    if (ref.current) {\n      ref.current.scrollLeft = 0;\n    }\n  }, [value]);\n\n  return (\n    <div className=\"display\" ref={ref}>\n      {digits.map((digit, index) => {\n        const setDigit = (value: string) => {\n          setDigitAt(value, index);\n        };\n        return (\n          <Digit key={digit + '@' + index} digit={digit} setDigit={setDigit} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Display;\n","import React, { ReactNode } from 'react';\n\nimport './index.css';\n\nconst FooterButton = ({\n  isDangerous,\n  onClick,\n  children\n}: {\n  isDangerous?: boolean;\n  onClick: () => void;\n  children: ReactNode;\n}) => {\n  return (\n    <button\n      className={'footer-button' + (isDangerous ? ' dangerous' : '')}\n      onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nexport default FooterButton;\n","import React, { useState, useRef } from 'react';\nimport Display from '../Display';\nimport FooterButton from '../FooterButton';\n\nimport './index.css';\nimport { checkExpression } from '../../utils/expression';\n\nconst initValue = NaN;\nconst Calculator: React.FC = () => {\n  const [answer, setAnswer] = useState(initValue);\n  const [key, setKey] = useState(0);\n  const answerRef = useRef(initValue);\n\n  const setExpression = (expression?: string) => {\n    if (typeof expression === 'undefined') {\n      answerRef.current = initValue;\n      console.log('Reset');\n      return;\n    }\n\n    const newAnswer = checkExpression(expression);\n    if (typeof newAnswer === 'number') {\n      answerRef.current = newAnswer; // don't set state yet\n      console.log('Answer:', newAnswer);\n    } else {\n      console.error('Invalid expression:', expression);\n    }\n  };\n\n  const calculate = () => {\n    setAnswer(answerRef.current);\n  };\n\n  const reset = () => {\n    setExpression();\n    calculate();\n    setKey(Date.now());\n  };\n\n  return (\n    <div className=\"calculator\">\n      <Display key={key} setExpression={setExpression} value={answer} />\n      <footer>\n        <FooterButton onClick={reset} isDangerous={true}>\n          {'↺'}\n        </FooterButton>\n        <FooterButton onClick={calculate}>{'＝'}</FooterButton>\n      </footer>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import React from 'react';\nimport Calculator from './components/Calculator';\nimport './App.css';\n\nconst App: React.FC = () => (\n  <div className=\"app\">\n    <div className=\"container\">\n      <Calculator />\n    </div>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}